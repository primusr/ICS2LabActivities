3.4

Input starting number: 10
Input ending number: 15
Sum = 39

**

4.1

Input starting number: 10
Input ending number: 15
Sum = 39

**

5.1

Input starting number: 10
Input ending number: 15
Sum = 39

**

7.
The different loop structures in Java are while, for, and do-while

**

8.
The similar components of these loop-constructs 

**

9. 

In the while loop, the condition is check before the body of the loop is executed. 

In the do-while loop, the body of the loop is executed once before the condition is checked and the loop is executed.

In the for loop, unlike the while and do-while loops, the initialization of the variable, condition, and change of variables are found in a single line. 

**

10.4

** WHILE LOOP **

	import java.io.*;

	public class StepWhile{
		public static void main(String[] args){

			int start = 0, end = 0, step = 0;
			boolean tryAgain = true;
			String input = " ";
		
			while (tryAgain){

				BufferedReader in = new BufferedReader(new InputStreamReader(System.in));

				try{
			
					System.out.print("Input START value = ");
					input = in.readLine();
					start = Integer.parseInt(input);

					System.out.print("Input END value = ");
					input = in.readLine();
					end = Integer.parseInt(input);
	
					System.out.print("Input STEP value = ");
					input = in.readLine();
					step = Integer.parseInt(input);

				} catch (IOException e){
					System.out.println("Error!");
				}

				if (start >= end){
					System.out.println("START should be lesser than the END");
				}

				if (step <= 0){
					System.out.println("STEP should be greater than ZERO");
				} 

				System.out.println(start);

				while ((start + step) <= end){
					start = start + step;
					System.out.println(start);
				}
	
				try{
					System.out.print("Do you want to try again (Y/N)? ");
					input = in.readLine();
					if (input.equals("N") || input.equals("n"))
						tryAgain = !tryAgain;
			
				}
				catch (IOException e){
					System.out.println("Error!");
				}
				
			}				
		}
	}


** FOR LOOP **

	import java.io.*;

	public class StepFor{
		public static void main(String[] args){

			int start = 0, end = 0, step = 0;
			boolean tryAgain = true;
			String input = " ";
		
			while (tryAgain){
				
				BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
			
				try{
				
					System.out.print("Input START value = ");
					input = in.readLine();
					start = Integer.parseInt(input);

					System.out.print("Input END value = ");
					input = in.readLine();
					end = Integer.parseInt(input);
	
					System.out.print("Input STEP value = ");
					input = in.readLine();
					step = Integer.parseInt(input);

				} catch (IOException e){
					System.out.println("Error!");
				}

				if (start >= end){
					System.out.println("START should be lesser than the END");
				}

				if (step <= 0){
					System.out.println("STEP should be greater than ZERO");
				} 
			
				for (start = start; start <= end; start = start + step){
					System.out.println(start);
				} 
	
				try{
					System.out.print("Do you want to try again (Y/N)? ");
					input = in.readLine();
					if (input.equals("N") || input.equals("n"))
						tryAgain = !tryAgain;
			
				}
				catch (IOException e){
					System.out.println("Error!");
				}	
			
			}				
		}
	}


** DO WHILE LOOP **

	import java.io.*;

	public class StepDoWhile{
		public static void main(String[] args){
	
			int start = 0, end = 0, step = 0;
			boolean tryAgain = true;
			String input = " ";
		
			while (tryAgain){
			
				BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
			
				try{
			
					System.out.print("Input START value = ");
					input = in.readLine();
					start = Integer.parseInt(input);

					System.out.print("Input END value = ");
					input = in.readLine();
					end = Integer.parseInt(input);
	
					System.out.print("Input STEP value = ");
					input = in.readLine();
					step = Integer.parseInt(input);

				} catch (IOException e){
					System.out.println("Error!");
				}

				if (start >= end){
					System.out.println("START should be lesser than the END");
				}
		
				if (step <= 0){
					System.out.println("STEP should be greater than ZERO");
				} 
			
				System.out.println(start);

				do{
					start = start + step;
					System.out.println(start);
				
				} while ((start + step) <= end);

				try{
					System.out.print("Do you want to try again (Y/N)? ");
					input = in.readLine();
					if (input.equals("N") || input.equals("n"))
						tryAgain = !tryAgain;
			
				}
				catch (IOException e){
					System.out.println("Error!");
				}	
			
			}		
		
				
		}
	}
